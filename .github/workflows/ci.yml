name: CI

on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  analyze_tests:
    name: analyze and test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check fvm
        uses: kuhnroyal/flutter-fvm-config-action@v2
        id: fvm-config-action
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2.5.0
        with:
          flutter-version: ${{ steps.fvm-config-action.outputs.FLUTTER_VERSION }}
          channel: ${{ steps.fvm-config-action.outputs.FLUTTER_CHANNEL }}
          cache: true
          cache-key: flutter
          cache-path: ${{ runner.tool_cache }}/flutter
      - name: Install flutter dependencies
        run: flutter pub get
      - name: Analyze (no fatal infos)
        run: flutter analyze --no-fatal-infos > flutter_analyze_report.txt
      - name: Format Analyze
        run: flutter format --dry-run --set-exit-if-changed .
      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1.2"
      - name: Cache bundle directory
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Setup danger
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install
      - name: execute danger
        uses: MeilCli/danger-action@v5
        with:
          plugins_file: "Gemfile"
          install_path: "vendor/bundle"
          danger_file: "Dangerfile"
          danger_id: "danger-pr"
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # # Flutter test
      # - name: Test
      #   run: |
      #     flutter test --machine > test_report.log
      # - name: Test Report
      #   uses: dorny/test-reporter@v1
      #   if: always()
      #   with:
      #     name: 'flutter test'
      #     path: 'test_report.log'
      #     reporter: 'flutter-json'
      #     fail-on-error: 'false'
      #     list-suites: 'all'
      #     list-tests: 'all'
      #     max-annotations: '30'
